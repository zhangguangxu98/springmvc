#设置日志等级及目的地

log4j.rootLogger=INFO,Console,File 

#输出到控制台

log4j.appender.Console=org.apache.log4j.ConsoleAppender 

log4j.appender.Console.Target=System.out 

#日志输出格式

log4j.appender.Console.layout = org.apache.log4j.PatternLayout 

log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n 

#输出到文件(tomcat\bin\logs\springMVC.log)

log4j.appender.File = org.apache.log4j.RollingFileAppender 
log4j.appender.FILE.Append=true 
log4j.appender.File.File = D:\\zhangguangxu98\\software\\eclipse\\workplace\\springmvc\\WebContent\\WEB-INF\\classes\\springmvc.log

#日志文件最大值 

log4j.appender.File.MaxFileSize = 1000MB 

#日志输出门槛

log4j.appender.File.Threshold = INFO 

log4j.appender.File.layout = org.apache.log4j.PatternLayout 

log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n 

#输出级别，共有5级：

#FATAL 致命错误

#ERROR 严重警告

#WARN 一般警告 

#INFO 普通信息

#DEBUG 调试信息

#Appender 为日志输出目的地，Log4j提供的appender有以下几种

#org.apache.log4j.ConsoleAppender（控制台），

#org.apache.log4j.FileAppender（文件），

#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），

#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），

#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）

#Layout：日志输出格式，Log4j提供的layout有以下几种：

#org.apache.log4j.HTMLLayout（以HTML表格形式布局），

#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），

#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），

#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）

#打印参数: Log4J采用类似C语言中的printf函数的打印格式格式化日志信息，如下:

#%m输出代码中指定的消息

#%p输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL

#%r输出自应用启动到输出该log信息耗费的毫秒数

#%c输出所属的类目，通常就是所在类的全名

#%t输出产生该日志事件的线程名

#%n输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n”

#%d输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss ,SSS}，

#%l输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。